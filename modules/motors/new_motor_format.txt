The following document describes the USB packet format for Caracara. 

The system works by having the computer send data over USB to the submarineâ€™s central microcontroller board. The central microcontroller board then handles controlling all the things listed in this document. 

Motor values: 

Must be a 32 bit value between -8850 and +8850

-8850: full reverse thrust
+8850: full forward thrust
0: stationary

Submarine motion:
The motor numbering is meant to match that of Scion.

Z axis:
To increase depth: set motors 1 / 3 / 5 / 7 to positive values
To decrease depth: set motors 1 / 3 / 5 / 7 to negative values

Y axis:
To move forward: set motors 0 / 2 / 4 / 6 to positive values
To move backward: set motors 0 / 2 / 4 / 6 to negative values


X axis:
To move left / towards port: Set motors 2 / 6 to positive values and motors 0 / 4 to negative values.
To move right / towards starboard: Set motors 2 / 6 to negative values and motors 0 / 4 to positive values. 

Yaw:
(when viewed from above)
Counter clockwise motion: Set motors 0 / 2 to negative values and motors 4 / 6 to positive values.
Clockwise motion: Set motors 0 / 2 to positive values and motors 4 / 6 to negative values.

Pitch:
To make the front of the sub aim towards the sky: Set motors 1 / 7 to negative values and motors 3 / 5 to positive values. 
To make the front of the sub aim towards the floor: Set motors 1 / 7 to positive values and motors 3 / 5 to negative values. 

Roll:
(when viewed from the back of the sub)
Counter clockwise motion: Set motors 1 / 3 to positive values and motors 5 / 7 to negative values.
Clockwise motion: Set motors 1 / 3 to negative values and motors 5 / 7 to positive values.

# of motors running
Absolute maximum values
8
+/- 4200
4
 +/- 5750
2
+/- 7850


Exceeding the absolute maximum values listed in the table will result in excessive load on the electrical system and puts the submarine at risk of an electrical failure. 







Motor Kill:

Must be a 32 bit value.
0: Motors enabled
Non-zero: Motors de-energized.
Once a non-zero value is sent, the motors will remain stopped until a value of zero is sent. Therefore, sending a value of zero indicates "all clear."
Power off:

Must be a 32 bit value.

0: not powered off
1: initiate power off

Sending a 1 is irreversible for obvious reasons. 

RGB values:

These values will control the color of the LED strips on the submarine. 

The intensity of each color is based upon a value between 0 and 255

The Red, Green, and Blue values need to be sent in separate 32 bit values. 

Packet format:
Here is a c based representation of the required packet format:

int32_t usbData[13]; 

usbData[0] = motor0; 
usbData[1] = motor1; 
usbData[2] = motor2; 
usbData[3] = motor3; 
usbData[4] = motor4; 
usbData[5] = motor5;
usbData[6] = motor6; 
usbData[7] = motor7; 
usbData[8] = killState; 
usbData[9] = powerOffState; 
usbData[10] = red; 
usbData[11] = green; 
usbData[12] = blue;
